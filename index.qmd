---
title: "index"
author: "Kimberline Reyes Macis"
format: html
theme: grey

---


# Introcucción 
El documento que se llevara a cabo mostrara diferentes colores, olores y pero sobre todo la calidad del café entre mejor calidad a menor de diferentes países, para una mejor visualización se harán uso de paquetes en Quarto para la creación de gráficos interactivos y distintas tablas de datos, datos que son extraídos del repositorio de Fatih boyer, titulado *coffee-quality-data-CQI*(https://github.com/fatih-boyar/coffee-quality-data-CQI) la respectiva referencia la encontraras en la bibliografía.

### Instalacion de paquetes
(Estos son los packs que serán utilizados para la realización de las gráficas y diferentes códigos de datos)

1. install.packages("tidyverse")
2. install.packages("plotly")
3. install.packages("DT")
4. install.packages("ggthemes")
5. install.packages("hrbrthemes")
6. install.packages("ggplot2")


### Carga de paquetes
```{r}
#| label: carga-paquetes
#| Warning: false
#| message: false


library(tidyverse)
library(ggplot2)
library(plotly)
library(DT)
library(ggthemes)
library(hrbrthemes)
library(readr)
```

# Tabla de datos
Por medio de tablas deseo presentar los países de origen de diferentes granos de café, el datos de las tablas a sido extraído del repositorio de Mfvargas (los datos de la tabla a sido editados por el usuario Mfvargas)  titulado _calidad del café.csv_.


```{r}
#| label: carga-datos cvs-Paises de Origen
#| warning: false
#| code-fold: true


# Carga de datos de coffe-quality en Columnas selecionadas

coffee_quality <-
  read_delim(file = "coffee-quality.csv",
    col_select = c(
      "Country_of_Origin",
      "Variety",
      "Color",
      "Variety",
      "Altitude",
      "Total_Cup_Points")
  )
    
# Presentation de tabla
    
coffee_quality |>
  datatable(
    options = list(
      pageLength = 10,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  )

```


# Gráficos 

A continuación se presentan graficas para el entendimiento de los datos referentes a la calidad del grano de cafe de cada pais.

## Gráficos estadísticos - Histograma
```{r}
#| label: histograma
#| warning: false
#| code-fold: false

# Cargar datos desde el archivo CSV en Githbuser

datos <- read_csv("https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2023-i/main/datos/cqi/coffee-quality.csv")

histograma <- ggplot(datos, aes(x = Total_Cup_Points, fill = "Histograma")) +
  geom_histogram(aes(y = ..density..), binwidth = 1, color = "white") +
  geom_density(alpha = 0.5, fill = "yellow") +
  labs(title = "Distribución de Total_Cup_Points",
       x = "Total_Cup_Points",
       y = "Densidad") +
  theme_grey()

# Convertir el histograma en interactivo
histograma_interactivo <- ggplotly(histograma)

# Visualizar el histograma interactivo
histograma_interactivo

```

## Gráficos estadísticos - Gráfico de dispersión
```{r}
#| label: ploty 
#| warning: false
#| code-fold: false

# lectura de datos y Graficación de disperción Altitude vs. Total_Cup_Point.

coffee_quality <-
  read_delim(file = "coffee-quality.csv")

grafico <- ggplot(datos, aes(x = Altitude, y = Total_Cup_Points)) +
  geom_point() +
  labs(title = "Altitude vs. Total_Cup_Points",
       x = "Altitude",
       y = "Total_Cup_Points") +
  theme_grey()

# Linea de modelo lineal
grafico_con_tendencia <- grafico +
  geom_smooth(method = "lm", se = FALSE)

# Convertir gráfico en interactivo
grafico_interactivo <- ggplotly(grafico_con_tendencia, tooltip = c("Altitude", "Total_Cup_Points"))

# Visualizar del gráfico interactivo
grafico_interactivo
```

```{r}
#| label: plotly
#| warning: false
#| code-fold: false

# Leer los datos desde el archivo CSV
coffee_quality <-
  read_delim(file = "coffee-quality.csv")

# Gráfico de caja
grafico_caja <- ggplot(datos, aes(x = Color, y = Total_Cup_Points, fill = Color)) +
  geom_boxplot() +
  ggtitle("Altitude vs. Total_Cup_Points") +
  xlab("Altitude") +
  ylab("Total_Cup_Points") +
  theme_grey(base_size = 12) +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 45, hjust = 1))

# Convertir gráfico de caja en interactivo
grafico_interactivo <- ggplotly(grafico_caja)

# Visualizar gráfico de caja
grafico_interactivo

```